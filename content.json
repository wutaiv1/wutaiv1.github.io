[{"title":"03 爬虫的基本原理","date":"2019-10-27T09:31:08.000Z","path":"2019/10/27/03-爬虫的基本原理/","text":"简介:介绍爬虫的原理 3、 爬虫简介3.1 爬虫概述&emsp;&emsp;近年来，随着网络应用的逐渐扩展和深入，如何高效的获取网上数据成为了无数公司和个人的追求，在大数据时代，谁掌握了更多的数据，谁就可以获得更高的利益，而网络爬虫是其中最为常用的一种从网上爬取数据的手段。 &emsp;&emsp;网络爬虫，即Web Spider，是一个很形象的名字。如果把互联网比喻成一个蜘蛛网，那么Spider就是在网上爬来爬去的蜘蛛。网络蜘蛛是通过网页的链接地址来寻找网页的。从网站某一个页面（通常是首页）开始，读取网页的内容，找到在网页中的其它链接地址，然后通过这些链接地址寻找下一个网页，这样一直循环下去，直到把这个网站所有的网页都抓取完为止。如果把整个互联网当成一个网站，那么网络蜘蛛就可以用这个原理把互联网上所有的网页都抓取下来。 3.2 爬虫的价值&emsp;&emsp;互联网中最有价值的便是数据，比如天猫商城的商品信息，链家网的租房信息，雪球网的证券投资信息等等，这些数据都代表了各个行业的真金白银，可以说，谁掌握了行业内的第一手数据，谁就成了整个行业的主宰，如果把整个互联网的数据比喻为一座宝藏，那我们的爬虫课程就是来教大家如何来高效地挖掘这些宝藏，掌握了爬虫技能， 你就成了所有互联网信息公司幕后的老板，换言之，它们都在免费为你提供有价值的数据。 3.3 爬虫的基本流程 发送请求: 12通过发送HTTP库向目标站点发送请求，即发送一个Request，请求可以包含额外的headers等信息，等待服务器响应。 获取响应内容: 12如果服务器能正常响应，会得到一个Response，Response的内容便是要获取的页面内容，类型有HTML和Json字符串，二进制数据(图片视频)等类型。 解析内容: 123得到的内容可能是HTML,可以使用正则表达式、网页解析库进行解析。可能是json,可以直接转为Json对象解析。可能是二进制数据，可以保存或者进一步的处理。 数据持久化: 1保存多种多样，可以存为文本，也可以保存至数据库，或者保存特定格式的文件。 123chrome浏览器右上角菜单 》 更多工具》开发者工具点击Network标题, 刷新页面，左下角会出现服务端给客户端返回的数据，点击其中任意文件，右边会出现请求头Headers（request 内容）和Response 内容 123chrome浏览器右上角菜单 》 更多工具》开发者工具点击Network标题, 刷新页面，左下角会出现服务端给客户端返回的数据，点击其中任意文件，右边会出现请求头Headers（request 内容）和Response 内容 123graph LR; A[客户端]--Request--&gt;B[服务器]; B--Response--&gt;A; 3.4 能抓取那些数据 网页文本 ：如HTML 文档，Json格式文本 图片：二进制文件，保存为图片格式 视频：二进制文件，保存为视频格式 其他：只要能够请求到的，都能获取 3.5 解析方式 直接处理：简单的网页，内容较少 Json 解析： 使用Ajax加载的数据，解析字符串 正则表达式：常用 BeautifulSoup: 解析库解析 XPath: 解析库解析 PyQuery: 解析库解析 3.6 保存数据 文本: 纯文本、Json、Xml 关系型数据库: MySQL、Oracle、SQL Server等具有结构化表结构形式存储 非关系型数据库: Redis、MongoDB 等key-Value 形式存储 二进制文件: 如图片、视频、音频等直接保存为特定格式 3.7 http库测试工具 - httpbin请求和响应服务类似这种能够很方便调试接口的还有很多，但是无疑还是httpbin最好用。requestbputsreqttpresponderrunscope 12345678import requests s = requests.Session() print s.get('http://httpbin.org/ip').text print s.get('http://httpbin.org/get').json() print s.post('http://httpbin.org/post', &#123;'key':'value'&#125;,headers=&#123;'user-agent':'LAOGAO'&#125;).text print s.get('http://httpbin.org/status/404').status_code print s.get('http://httpbin.org/html').text print s.get('http://httpbin.org/deny').text 一些常见的接口Endpoint| Description—|—/ |This page./ip |Returns Origin IP./user-agent | Returns user-agent./headers | Returns header dict./get |Returns GET data./post |Returns POST data./patch |Returns PATCH data./put |Returns PUT data./delete |Returns DELETE data……..| ……..graph LR; A[发送请求]-->B[获取响应]; B-->C[解析数据]; C-->D[数据持久化];{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);","tags":[]},{"title":"02 爬虫相关库的安装","date":"2019-10-27T09:29:00.000Z","path":"2019/10/27/02-爬虫相关库的安装/","text":"简介:爬虫相关库的安装 2.1 re和urllib库re: 正则库urllib : URL 处理库 默认re 库和urllib 的库是安装的 12345678910C:\\Users\\wutai&gt;pythonPython 3.7.3 (default, Apr 24 2019, 15:29:51) [MSC v.1915 64 bit (AMD64)] :: Anaconda, Inc. on win32....&gt;&gt;&gt; import urllib # 库没有错，说明是安装上的&gt;&gt;&gt; import urllib.request&gt;&gt;&gt; urllib.request.urlopen(&apos;http://www.baidu.com&apos;) # &lt;http.client.HTTPResponse object at 0x000001C437E5E5F8&gt;&gt;&gt;&gt; import re # 库没有错，说明是安装上的&gt;&gt;&gt; 2.2 requestsrequest模块是一个用于访问网络的模块 12345678910 C:\\Users\\wutai&gt;pip -Vpip 19.1.1 from D:\\Program Files\\Anaconda3\\lib\\site-packages\\pip (python 3.7)C:\\Users\\wutai&gt;pip list #查看安装的库Package Version---------------------------------- ---------alabaster 0.7.12anaconda-client 1.7.2anaconda-navigator 1.9.7... 默认request模块没有安装 123C:\\Users\\wutai&gt;pip install requests # 安装request模块Collecting request... 安装后查看并进行测试 12345678910111213C:\\Users\\wutai&gt;pip list #查看安装的库Package Version---------------------------------- ---------...request 2019.4.13requests 2.22.0 #查看已经安装上了....C:\\Users\\wutai&gt;python&gt;&gt;&gt; import requests # 导入模块并测试&gt;&gt;&gt; requests.get(&apos;http://www.baidu.com&apos;)&lt;Response [200]&gt; 2.3 seleniumselenium : 是一个用于Web应用程序测试的工具 安装 1C:\\Users\\wutai&gt;pip install selenium 测试 123456789101112131415161718192021222324C:\\Users\\wutai&gt;pythonPython 3.7.3 (default, Apr 24 2019, 15:29:51) [MSC v.1915 64 bit (AMD64)] :: Anaconda, Inc. on win32&gt;&gt;&gt; import selenium&gt;&gt;&gt; from selenium import webdriver&gt;&gt;&gt; driver = webdriver.Chrome()Traceback (most recent call last): File &quot;D:\\Program Files\\Anaconda3\\lib\\site-packages\\selenium\\webdriver\\common\\service.py&quot;, line 76, in start stdin=PIPE) File &quot;D:\\Program Files\\Anaconda3\\lib\\subprocess.py&quot;, line 775, in __init__ restore_signals, start_new_session) File &quot;D:\\Program Files\\Anaconda3\\lib\\subprocess.py&quot;, line 1178, in _execute_child startupinfo)FileNotFoundError: [WinError 2] 系统找不到指定的文件。During handling of the above exception, another exception occurred:Traceback (most recent call last): File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt; File &quot;D:\\Program Files\\Anaconda3\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py&quot;, line 73, in __init__ self.service.start() File &quot;D:\\Program Files\\Anaconda3\\lib\\site-packages\\selenium\\webdriver\\common\\service.py&quot;, line 83, in start os.path.basename(self.path), self.start_error_message)selenium.common.exceptions.WebDriverException: Message: &apos;chromedriver&apos; executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home # chromedriver 不在环境变量中 2.4 chromedriver使用WebDriver在Chrome浏览器上进行测试时，需要从http://chromedriver.storage.googleapis.com/index.html网址中下载与本机chrome浏览器对应的驱动程序，驱动程序名为chromedriver； 下载是需要翻墙的，使用国内镜像 12345678910111213http://npm.taobao.org/mirrors/chromedriver/下载的版本需要和chrome 浏览器的版本对应，否则会报错浏览器版本 77.0.3865.120下载chromdriver版本:77.0.3865.10将chromedriver.exe 复制到python的命令的位置，我复制到D:\\Program Files\\Anaconda3，在环境变量中，C:\\Users\\wutai&gt;chromedriverStarting ChromeDriver 77.0.3865.10 (bc3579f611bbc73331171afe020ec7a45e6ccc55-refs/branch-heads/3865@&#123;#93&#125;) on port 9515Only local connections are allowed.Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. 1234&gt;&gt;&gt; import selenium&gt;&gt;&gt; from selenium import webdriver&gt;&gt;&gt; driver = webdriver.Chrome() # 浏览器打开chrom浏览器的一个页面DevTools listening on ws://127.0.0.1:59729/devtools/browser/a34b37e9-2755-4d4e-837c-ec2ae5c81afa 2.5 phantomjsPhantomJS是一个基于Webkit的”无界面”(headless)浏览器，它会把网站加载到内存并执行页面上的JavaScript，因为不会展示图形界面，所以运行起来比完整的浏览器更高效。 如果我们把Selenium和PhantomJS结合在一起，就可以运行一个非常强大的网络爬虫了，这个爬虫可以处理JavaScript、Cookie、headers，以及任何我们真实用户需要做的事情。 该程序的开发成员已经不在更新该软件，软件版本”2.1.1”” 1下载地址： https://phantomjs.org/download.html 123解压软件包到D:\\phantomjs-2.1.1-windows在环境变量中添加该目录D:\\phantomjs-2.1.1-windows\\bin ，该文件夹内有 测试 12345C:\\Users\\wutai&gt;phantomjs # 进入交互模式phantomjs&gt; console.log(&apos;Hello World&apos;)Hello Worldundefinedphantomjs&gt; 2.6 lxmllxml是python的一个解析库，支持HTML和XML的解析，支持XPath解析方式，而且解析效率非常高 XPath，全称XML Path Language，即XML路径语言，它是一门在XML文档中查找信息的语言，它最初是用来搜寻XML文档的，但是它同样适用于HTML文档的搜索 安装 12 C:\\Users\\wutai&gt;pip install lxmlRequirement already satisfied: lxml in d:\\program files\\anaconda3\\lib\\site-packages (4.3.4) 2.7 beautifulsoup12345Beautiful Soup提供一些简单的、python式的函数用来处理导航、搜索、修改分析树等功能。它是一个工具箱，通过解析文档为用户提供需要抓取的数据，因为简单，所以不需要多少代码就可以写出一个完整的应用程序。Beautiful Soup自动将输入文档转换为Unicode编码，输出文档转换为utf-8编码。你不需要考虑编码方式，除非文档没有指定一个编码方式，这时，Beautiful Soup就不能自动识别编码方式了。然后，你仅仅需要说明一下原始编码方式就可以了。Beautiful Soup已成为和lxml、html6lib一样出色的python解释器，为用户灵活地提供不同的解析策略或强劲的速度。 安装 123C:\\Users\\wutai&gt;pip install beautifulsoup4Requirement already satisfied: beautifulsoup4 in d:\\program files\\anaconda3\\lib\\site-packages (4.7.1)Requirement already satisfied: soupsieve&gt;=1.2 in d:\\program files\\anaconda3\\lib\\site-packages (from beautifulsoup4) (1.8) 2.8 pyquerypyquery库是jQuery的Python实现，能够以jQuery的语法来操作解析 HTML 文档，易用性和解析速度都很好，和它差不多的还有BeautifulSoup，都是用来解析的。 官方文档 1https://pythonhosted.org/pyquery/ 安装 1C:\\Users\\wutai&gt; pip install pyquery 2.9 pymysql操作mysql数据库的一个库，在python3中使用 安装 1C:\\Users\\wutai&gt;pip install pymysql 2.10 pymongo操作mongodb数据库的一个库 安装 1C:\\Users\\wutai&gt;pip install pymongo 2.11 redis操作redis数据库的一个库 安装 1C:\\Users\\wutai&gt;pip install pymongo 2.12 flaskFlask是一个使用 Python 编写的轻量级 Web 应用框架 安装 1C:\\Users\\wutai&gt;pip install flask 2.13 django Web 应用框架 安装 1C:\\Users\\wutai&gt;pip install django 2.14 jupyterJupyter Notebook（此前被称为 IPython notebook）是一个交互式笔记本，支持运行 40 多种编程语言。 Jupyter Notebook 的本质是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码，数学方程，可视化和 markdown。 用途包括：数据清理和转换，数值模拟，统计建模，机器学习等等 [1] 。 安装 1C:\\Users\\wutai&gt;pip install jupyter 测试 1234C:\\Users\\wutai&gt;jupyter notebook # 会弹出一个浏览器页面点击右侧 NEW &gt; Notebook &gt; python3 会出现一个命令行print(&quot;aaa&quot;) # 使用户ctrl + 回车 会python3会执行该命令","tags":[{"name":"爬虫","slug":"爬虫","permalink":"http://yoursite.com/tags/爬虫/"}]},{"title":"01爬虫前期软件安装","date":"2019-10-27T09:27:00.000Z","path":"2019/10/27/01爬虫/","text":"安装环境:windows简介: 爬虫前安装软件，Anacoda3,MongoDB ，MySql 1.1 安装Anacoda3如果没有手动安装Python3， 推荐使用Anacoda3 1.1.1 安装12官网地址，下载exe文件https://www.anaconda.com/distribution/#download-section 安装完成后，在最后一步，默认是没有添加环境变量的（添加环境变量的勾没有添加），在windows 上添加环境变量 12345D:\\Program Files\\Anaconda3D:\\Program Files\\Anaconda3\\ScriptsD:\\Program Files\\Anaconda3\\Library\\mingw-w64\\binD:\\Program Files\\Anaconda3\\Library\\usr\\binD:\\Program Files\\Anaconda3\\Library\\bin 1.1.2 测试在cmd上执行命令 123456789101112131415161718192021222324252627C:\\Users\\wutai&gt;conda info active environment : None user config file : C:\\Users\\wutai\\.condarc populated config files : C:\\Users\\wutai\\.condarc conda version : 4.7.10 conda-build version : 3.18.8 python version : 3.7.3.final.0 # python 版本 virtual packages : __cuda=9.2 base environment : D:\\Program Files\\Anaconda3 (writable) channel URLs : https://repo.anaconda.com/pkgs/main/win-64 https://repo.anaconda.com/pkgs/main/noarch https://repo.anaconda.com/pkgs/r/win-64 https://repo.anaconda.com/pkgs/r/noarch https://repo.anaconda.com/pkgs/msys2/win-64 https://repo.anaconda.com/pkgs/msys2/noarch package cache : D:\\Program Files\\Anaconda3\\pkgs C:\\Users\\wutai\\.conda\\pkgs C:\\Users\\wutai\\AppData\\Local\\conda\\conda\\pkgs envs directories : D:\\Program Files\\Anaconda3\\envs C:\\Users\\wutai\\.conda\\envs C:\\Users\\wutai\\AppData\\Local\\conda\\conda\\envs platform : win-64 user-agent : conda/4.7.10 requests/2.22.0 CPython/3.7.3 Windows/10 Windows/10.0.18362 administrator : False netrc file : None offline mode : False 安装完成后，Python 和pip 程序都默认安装完毕 123456789101112131415161718C:\\Users\\wutai&gt;pythonPython 3.7.3 (default, Apr 24 2019, 15:29:51) [MSC v.1915 64 bit (AMD64)] :: Anaconda, Inc. on win32Warning:This Python interpreter is in a conda environment, but the environment hasnot been activated. Libraries may fail to load. To activate this environmentplease see https://conda.io/activationType &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt; exit()C:\\Users\\wutai&gt;pip listPackage Version---------------------------------- ---------alabaster 0.7.12anaconda-client 1.7.2anaconda-navigator 1.9.7anaconda-project 0.8.3 1.2 安装MongoDB1.2.1 默认安装123https://www.mongodb.com/download-center/community选择版本，下载exe 文件，版本是社区版本我的版本是：v4.2.0 软件安装位置 1D:\\MongoDB 配置环境变量 123456789101112将 &quot;D:\\MongoDB\\bin&quot; 添加到环境变量Path中,该文件夹是MongoDB的命令文件夹进入CMD命令行C:\\Users\\wutai&gt;mongod -version # 进行测试db version v4.2.0git version: a4b751dcf51dd249c5865812b390cfd1c0129c30allocator: tcmallocmodules: nonebuild environment: distmod: 2012plus distarch: x86_64 target_arch: x86_64 安装mogodb服务后，会在本地有一个客户端，默认连接localhost的27017端口，可以可视化日志。 1.2.2 启动服务端 在 “D:\\MongoDB\\data “ 下创建 db 文件夹，存放数据（也可选择其他文件路径） 启动数据库服务端 1234567891011121314151617C:\\Users\\wutai&gt;mongod --dbpath &quot;D:\\MongoDB\\data\\db&quot; # 指定数据库位置2019-10-16T05:44:50.796+0800 I CONTROL [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols &apos;none&apos;2019-10-16T05:44:50.803+0800 I CONTROL [initandlisten] MongoDB starting : pid=14084 port=27017 dbpath=D:\\MongoDB\\data\\db 64-bit host=WUTAI-PC2019-10-16T05:44:50.804+0800 I CONTROL [initandlisten] targetMinOS: Windows 7/Windows Server 2008 R22019-10-16T05:44:50.805+0800 I CONTROL [initandlisten] db version v4.2.02019-10-16T05:44:50.806+0800 I CONTROL [initandlisten] git version: a4b751dcf51dd249c5865812b390cfd1c0129c302019-10-16T05:44:50.806+0800 I CONTROL [initandlisten] allocator: tcmalloc2019-10-16T05:44:50.807+0800 I CONTROL [initandlisten] modules: none2019-10-16T05:44:50.807+0800 I CONTROL [initandlisten] build environment:2019-10-16T05:44:50.809+0800 I CONTROL [initandlisten] distmod: 2012plus2019-10-16T05:44:50.810+0800 I CONTROL [initandlisten] distarch: x86_642019-10-16T05:44:50.810+0800 I CONTROL [initandlisten] target_arch: x86_642019-10-16T05:44:50.811+0800 I CONTROL [initandlisten] options: &#123; storage: &#123; dbPath: &quot;D:\\MongoDB\\data\\db&quot; &#125; &#125; # 数据库目录......2019-10-16T05:44:52.403+0800 I NETWORK [initandlisten] Listening on 127.0.0.1 # 监听IP2019-10-16T05:44:52.403+0800 I SHARDING [LogicalSessionCacheReap] Marking collection config.transactions as collection version: &lt;unsharded&gt;2019-10-16T05:44:52.406+0800 I NETWORK [initandlisten] waiting for connections on port 27017 # 启用的端口 MongoDB的默认端口号：27017 （redis：6379 MySql：3306） 1.2.3 验证(服务端不关闭)12345678910111213方式一： 在浏览器器上访问： http://localhost:27017/网页显示 ：It looks like you are trying to access MongoDB over HTTP on the native driver port.方式二: CMD 命名行执行mongoC:\\Users\\wutai&gt;mongoMongoDB shell version v4.2.0connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&amp;gssapiServiceName=mongodbImplicit session: session &#123; &quot;id&quot; : UUID(&quot;7c204c1e-9f5c-435d-b125-837bc4a857e7&quot;) &#125;MongoDB server version: 4.2.0Welcome to the MongoDB shell.....&gt; 1.2.4 将MongoDB设置成Windows 服务创建日志文件 1D:\\MongoDB\\log 目录下创建mongodb.log文件 在管理员命令行执行（普通用户执行不生效） 1C:\\Users\\wutai&gt;mongod --bind_ip 0.0.0.0 --logpath &quot;D:\\MongoDB\\log\\mongodb.log&quot; --logappend --dbpath &quot;D:\\MongoDB\\data\\db&quot; --port 27017 --directoryperdb --serviceName &quot;MongoDB&quot; --serviceDisplayName &quot;MongoDB&quot; --install 绑定IP,设置日志位置(日志是追加logappend)，数据库文件位置，端口，配置服务名称”Mongodb”,配置服务后显示名称”Mongodb” 设置成windows 服务遇到2个问题 1234567891011121314151、启动服务时报1053 错误解决办法：删除服务：启动管理员cmd , sc delete &quot;MongoDB&quot; 创建服务：启动管理员cmd , D: cd D:\\MongoDB\\bin mongod --bind_ip 0.0.0.0 ....2、再次启动时报100错误解决办法：cd D:\\MongoDB\\data\\db # 数据库文件 1.找到你数据库文件夹中的这两个文件 mongod.lock storage.bson 2.删掉他们再次启动数据库则不会报错 在windows 服务界面看到MongoDB 服务，设置为自动 , 这样随windows 启动，服务也会启动 12服务名称： MongoDB显示名称： MongoDB 1.2.5 可视化MongoDB 客户端Robo3TRobo 3T是一个支持windows、Mac、Linux三个平台的mongo图形化客户端。 1下载页面：https://robomongo.org/download studio 3T是收费的，Robo3T是简化版免费的。 1.3 安装redisWindow 下安装 12下载地址：https://github.com/MSOpenTech/redis/releases下载为msi ,安装注意要勾选添加到环境变量。安装后，会自动创建服务（自启动） 可视化工具 Redis Desktop Manager因为Redis Desktop Manager作者在 0.9.4 版本之后选择对所有的安装包收费，不再提供安装包下载，但是源码依旧公开。0.9.3版本对于大量数据查询优化不够好，推荐使用0.9.4。 1.4 安装mysql1234地址 https://dev.mysql.com/downloads/installer/1、选择的windows版本是 mysql-installer-community-8.0.18.0.msi2、进入下载页面，点击“No thanks,just start my download ” 直接进行下载 1234567安装注意事项:1、选择安装类型“Choosing a setup Type ” 中选择“server only” 只安装服务端， 默认的是安装MySQL服务器和MySQL应用程序开发所需的工具。 如果您打算为现有服务器开发应用程序，这将很有用。2、&quot;high availability&quot; 高可用下选择第一个”standalone MySQL Server /Classic MysSQL Replication“ 经典的mysql 服务器选项；3、&quot;Type and Networking&quot; 配置服务器类型，默认即可，默认端口是 3306， 4、“Accounts and Method” 选择默认，认证方式；5、设置密码 admin123 验证 121、windows 服务上有一个MySQL80 服务2、安装有一个mysql 客户端，&quot;MySQL8.0 Command line Client&quot;,进入命令行，输入密码后，执行“show datbases;” 添加客户端环境变量 123456mysql的安装位置在C盘，将下面目录添加到PATH环境变量中C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin环境变量设置后，可以在命令行允行mysql 客户端C:\\Users\\wutai&gt;mysql -u root -pEnter password: ******** mysql 可视化工具 SQLyog12345配置新连接报错：错误号码 2058，分析是 mysql 密码加密方法变了。解决方法：windows 下cmd 登录 mysql -u root -p 登录你的 mysql 数据库，然后执行这条SQL：ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED WITH mysql_native_password BY &apos;admin123&apos;;（注意分号）","tags":[{"name":"爬虫","slug":"爬虫","permalink":"http://yoursite.com/tags/爬虫/"}]},{"title":"05 windows10 安装hexo","date":"2019-10-15T20:47:00.000Z","path":"2019/10/16/05-windows10-安装hexo/","text":"简介: 在windows10上部署hexo,发布到github上随笔 一、准备工作1.1 安装git软件地址: https://git-scm.com/download/win 1.2 安装nodejs软件地址: https://nodejs.org/en/download/ 我的安装目录D:\\Program Files\\NodeJs 该目录下创建两个文件夹，这是用来放npm全局模块的安装目录（可以放在其他位置） node-cache node-global 配置环境变量 1、新建一个系统变量（电脑》属性》系统保护（打开系统属性）》高级》环境变量） 12变量名：NODE_HOME变量值（你的安装目录）：D:\\Program Files\\NodeJs 2、编辑Path变量 新增两个条目 12%NODE_HOME%%NODE_HOME%\\node-global 测试,进入cmd 12345C:\\Users\\wutai&gt;node -vv10.16.3C:\\Users\\wutai&gt;npm -v6.9.0 1.3 安装hexo123456C:\\Users\\wutai&gt;npm install -g hexo-clinpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\\hexo-cli\\node_modules\\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)+ hexo-cli@2.0.0added 187 packages from 434 contributors in 39.078s 二、Hexo的使用进入目录E:\\github_blog ,右击打开Git Bash ，执行 12345678wutai@WUTAI-PC MINGW64 /e/github_blog$ hexo init blog # 生成目录并进行初始化$ cd blog$ git clone https://github.com/chaooo/hexo-theme-BlueLake.git themes/BlueLake# 渲染插件$ npm install hexo-renderer-jade@0.3.0 --save$ npm install hexo-renderer-stylus --save 启用hexo 主题在Hexo根配置文件（blog/_config.yml）中把主题设置修改为BlueLake。 1theme: BlueLake 验证12# 调试模式$ hexo s --debug 在服务启动的过程， 当命令行输出中提示出：INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop. 此时即可使用浏览器访问 http://localhost:4000，检查站点是否正确运行。如果是公网，使用公网IP 进行访问，注意开4000端口的防火墙。 大部分和Linux上主题配置相同 Hexo Admin插件管理安装 1npm install --save hexo-admin 根_config.yml 123456# 密码是test1admin: username: test password_hash: $2a$10$5nJewMv0le/TQZRjx6inKud6EEHj50Pu0vdx5rPjc8rsoEqjhpgy. secret: hey hexo deployCommand: &apos;hexo-pubish.bat&apos; 在同级目录新建hexo-pubish.bat，内容 1hexo g -d github 免密码设置根_config.yml 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/wutaiv1/wutaiv1.github.io.git branch: master 123$ git config user.email # 查看自己设置的邮箱2677575015@qq.com$ ssh-keygen -t rsa -C &quot;2677575015@qq.com&quot; # 执行后提示输入参数，默认，直接回车就行 123C:\\Users\\wutai\\.ssh # 目录下生成2个文件id_rsa和id_rsa.pub 文件 之后在github添加SSH Key,在任意界面右上角，点击你的头像，选择Settings-&gt; SSH and GPG keys –&gt; SSH keys-&gt;New SSH key .然后将生成的 id_rsa.pub 中的内容全选复制到 key 输入框中，然后点击 Add key 完成添加公钥。 Title 1window hexo key 1ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDClKy74sNNqYWUd1mkV7UDrIBv2QP5QNP1hBfU1ZrP4/8TxfXnsqURWpAO9VCi0MmP2+w4tWWzEi9mvmXudrpb3PNPHa0r4GcmSPHi3CU7iu6/9ux+Fw4EMrtYZBuUUQqM5eM+GoJqo2zCQ4Gzr3tSXhjy/IsXbF6Hzqp1gE8DFpRuQYfXspPOE6urfO/74BebQM6JFzoJXWn8bFC8ub8MAGIzKsUjatFuGtI6Iyg22oW7vafQNY+196LQgREryDGcGgmlksAxSHv6BTs7sUF+FkoFvcsd9B10YbjcViO6jL0f9i5hL9N62Yh/enthsshWqPekJdWQTS7Tw8ZcCRij6FggISooIMO29XOUca3K6KZIBJ5lgilUE/o1RjCnktJZUjSlkeN0TBzbEeFdr5BCihLd/lTZ/CAc139otsPg3ljji3kjA2K3SQEDpkCTkDTisxRAcFiUYhE/0dosUUPeho0o6UQb4QZAfG4DvIs3KDsXbWSPj9QkrTqMXWG8YTc= 2677575015@qq.com 1234567进行测设$ ssh -T git@github.comThe authenticity of host &apos;github.com (13.250.177.223)&apos; can&apos;t be established.RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.Are you sure you want to continue connecting (yes/no/[fingerprint])? yes # 输入yesWarning: Permanently added &apos;github.com,13.250.177.223&apos; (RSA) to the list of known hosts.Hi wutaiv1! You&apos;ve successfully authenticated, but GitHub does not provide shell access. # 代表成功 执行”hexo g d” 不再提示输入github 的登录名和密码","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"04 hexo-admin 后台发布插件","date":"2019-10-15T20:43:00.000Z","path":"2019/10/16/04-hexo-其他/","text":"简介: 后台发布插件hexo-admin ，让发布博客更加简单 1 安装后台发布插件hexo-admin进行安装插件 1234npm install --save hexo-admin# 如果报错缺少组件，则缺少什么安装什么，npm install 加缺少的组件。# 例如 npm install minimatch@&quot;3.0.2&quot; # 组件安装后执行 npm update -d 配置文件设置用户名和密码设置密码在hexo的_config.yml配置hexo-admin 12345admin: username: test # 用户名 password_hash: $2a$10$5nJewMv0le/TQZRjx6inKud6EEHj50Pu0vdx5rPjc8rsoEqjhpgy. # 密码的哈希映射值，可以为空 secret: hey hexo #用以cookies安全； deployCommand: &apos;./admin_script/hexo-generate.sh&apos; 使用的是bcrypt哈希算法，使用下面的方式计算哈希值 123456[root@blog blog]# node &gt; const bcrypt = require(&apos;bcrypt-nodejs&apos;)undefined&gt; bcrypt.hashSync(&apos;test1&apos;) # 密码是test1&apos;$2a$10$5nJewMv0le/TQZRjx6inKud6EEHj50Pu0vdx5rPjc8rsoEqjhpgy.&apos;&gt; exit 这里的command对应于界面中的deploy按钮，在下面写上脚本，可以一键生成html页面，并提交到托管的地址，这就是hexo admin的核心思想！ 创建发布脚本1234mkdir admin_script # 创建文件夹cd admin_scripttouch hexo-generate.sh # 创建脚本 vim hexo-generate.sh # 写脚本 脚本内容， 12#!/usr/bin/env shhexo g 对脚本赋予权限 1chmod +x hexo-generate.sh 启动服务，进行测试12hexo server -dopen http://localhost:4000/admin/ 进入后台之后点击Deploy，里面的Deploy按钮是用来执行发布脚本的","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"03 hexo 的常用命令","date":"2019-10-15T20:40:00.000Z","path":"2019/10/16/03-hexo-的常用命令/","text":"简介: hexo 的常用命令 进入hexo 的根目录,才能执行下面的命令 hexo new 创建文章hexo new 命令用于新建文章，一般可以简写为 ==hexo n== 12hexo new &lt;title&gt; #title 必填参数，用以指定文章标题，如果参数值中含有空格，则需要使用双引号包围 1hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; hexo new page “页面名” 添加页面(菜单选项)123456// 添加分类页面hexo new page &quot;categories&quot;// 添加标签页面hexo new page “tags”// 添加关于页面hexo new page &quot;about 执行上面命令，会在source文件夹中生成相关的文件夹，文件夹内index.md文件 hexo new photo “文章名” 创建一个模板文章在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如： 1$ hexo new photo &quot;My Gallery&quot; 在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md，并根据其内容建立文章，以下是您可以在模版中使用的变量： 下面是默认创建使用的模板， 123456[hexo@blog scaffolds]$ cat post.md ---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:--- 1234567891011121314151617[hexo@blog blog]$ hexo new photo test3 # 谁用模板创建的效果INFO Created: ~/blog/source/_posts/test3.md[hexo@blog blog]$ cat ~/blog/source/_posts/test3.md---layout: phototitle: test3date: 2019-08-02 21:43:46tags:---[hexo@blog blog]$ cat ~/blog/source/_posts/testtest1.md test3.md [hexo@blog blog]$ cat ~/blog/source/_posts/test1.md ---title: test1date: 2019-08-02 21:15:01tags:--- hexo generate 生成静态文件将markdown 的文件转为静态的html 文件 一般可以简写为 ==hexo g== 1hexo generate hexo deploy 部署文件(上传远程服务器)一般可以简写为 ==hexo d== 说明 ：部署前需要修改 _config.yml 配置文件，下面以 git 为例进行说明 1234type: gitrepo: &lt;repository url&gt;branch: mastermessage: 自定义提交消息，默认为Site updated: &#123;&#123; now(&apos;YYYY-MM-DD HH:mm:ss&apos;) &#125;&#125; 生成文件后，提交给远程的服务器，例如git服务器 两个命令的作用是相同的,生成静态文件并部署 12345678hexo generate --deployhexo deploy --generatehexo deploy -ghexo server -ghexo g -dhexo d -g hexo clean 清理缓存文件1hexo clean 草稿和正式文章12hexo new draft &quot;new draft&quot; 新建草稿hexo publish [layout] &lt;title&gt; 变成正式文章 hexo server 启动hexo服务123456hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。 （默认端口4000，’ctrl + c’关闭server）hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo s --debug # 进行调试，默认访问本地的4000 端口 挂载到后台,并启用80端口，使用root 用户执行 1hexo server -p 80 &amp; 通用的模板1hexo server -p 80 &amp; #如果服务已经启动，则不许执行该步 1234567891011$ hexo new &quot;test1&quot; # 新建文章INFO Created: ~/blog/source/_posts/test1.md$ hexo new photo &quot;My Gallery&quot; # 创建模板文章$ hexo new page &quot;test1&quot; # 新建页面INFO Created: ~/blog/source/test1/index.md$ hexo generate #生成静态页面至public目录$ hexo deploy #将.deploy目录部署到GitHub hexo 首页文章只显示一部分这个只要在文章中加上 1&lt;!--more--&gt; 标记 ，该标记以后部分就不在显示了，只有展开全部才显示，这是hexo定义的。","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"01 安装hexo 的前期软件","date":"2019-10-15T20:38:00.000Z","path":"2019/10/16/01-安装hexo-的前期软件/","text":"环境: centos 7.3简介: 安装hexo的前期软件,安装Nodejs,npm,git 安装 nodejs 和npm1、到官网找对应版本的链接 12# 官方中文版本页面http://nodejs.cn/download/ 进入官网后，不要下载源代码，例如（node-v10.16.0.tar.gz）而是进入阿里云镜像，下载编译好的软件 2、在/opt目录下下载软件 12345cd /optwget http://cdn.npm.taobao.org/dist/node/v10.16.0/node-v10.16.0-linux-x64.tar.xz# 阿里云镜像wget https://nodejs.org/dist/v10.16.0/node-v10.16.0-linux-x64.tar.xz 3、解压软件 1tar -xf node-v10.8.0-linux-x64.tar.xz 4、建立软链接，变为全局npm 是安装node 后自带的软件，程序目录在源码安装目录下的bin目录下 12ln -s /opt/node-v10.16.0-linux-x64/bin/npm /usr/local/bin/ln -s /opt/node-v10.16.0-linux-x64/bin/node /usr/local/bin 5、查看node 和npm 版本 1234[root@my-site ~]# node -v v10.16.0[root@my-site ~]# npm -v6.9.0 ==安装nodejs 和npm使用稳定版本，使用下面的操作进行升级，否则可能会报错== 升级 node 和rpm安装 cnmpcnmp 是淘宝镜像，安装速度快 1npm install -g cnpm --registry=https://registry.npm.taobao.org 安装后，程序目录在源码安装目录下的bin目录下，建立软链接 1ln -s /opt/node-v10.8.0-linux-x64/bin/cnpm /usr/local/bin/ 查看版本 12345678[root@my-site ~]# cnpm -vcnpm@6.0.0 (/opt/node-v10.8.0-linux-x64/lib/node_modules/cnpm/lib/parse_argv.js)npm@6.4.0 (/opt/node-v10.8.0-linux-x64/lib/node_modules/cnpm/node_modules/npm/lib/npm.js)node@10.8.0 (/opt/node-v10.8.0-linux-x64/bin/node)npminstall@3.11.0 (/opt/node-v10.8.0-linux-x64/lib/node_modules/cnpm/node_modules/npminstall/lib/index.js)prefix=/opt/node-v10.8.0-linux-x64linux x64 3.10.0-514.26.2.el7.x86_64registry=https://registry.npm.taobao.org 安装n模块(用于升级nodejs)123npm install -g n命令目录：/opt/node-v10.16.0-linux-x64/bin 12345n stable # 升级node.js到最新稳定版n latest # 升级node.js到最新版n v7.10.0 # 升级node.js到制定版本 升级到稳定版本 12345678910[root@blog ~]# /opt/node-v10.16.0-linux-x64/bin/n stable installing : node-v10.16.1 mkdir : /usr/local/n/versions/node/10.16.1 fetch : https://nodejs.org/dist/v10.16.1/node-v10.16.1-linux-x64.tar.gz installed : v10.16.1[root@blog ~]# node -vv10.16.1[root@blog ~]# 升级npm1npm install npm@latest -g 1234567891011121314151617[root@blog ~]# npm version&#123; npm: &apos;6.9.0&apos;, ares: &apos;1.15.0&apos;, brotli: &apos;1.0.7&apos;, cldr: &apos;35.1&apos;, http_parser: &apos;2.8.0&apos;, icu: &apos;64.2&apos;, modules: &apos;64&apos;, napi: &apos;4&apos;, nghttp2: &apos;1.34.0&apos;, node: &apos;10.16.1&apos;, openssl: &apos;1.1.1c&apos;, tz: &apos;2019a&apos;, unicode: &apos;12.1&apos;, uv: &apos;1.28.0&apos;, v8: &apos;6.8.275.32-node.54&apos;, zlib: &apos;1.2.11&apos; &#125; 将目录存放到家目录12vim ~/.bash_profilePATH=$PATH:$HOME/bin:/opt/node-v10.8.0-linux-x64/bin 安装git123[root@blog ~]# yum install -y git[root@blog ~]# git --versiongit version 1.8.3.1","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"02 安装hexo和主题","date":"2019-10-15T20:29:00.000Z","path":"2019/10/16/02-安装hexo和主题/","text":"简介:安装hexo软件和hexo主题BlueLake 1 安装hexo1.1 安装hexo程序安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序： Node.js (Should be at least nodejs 6.9) Git 安装hexo 程序 12# 官网安装命令$ npm install hexo-cli -g 安装成功后，在/opt/node-v10.16.0-linux-x64/lib/node_modules/hexo-cli目录下生成程序文件 使用hexo用户管理博客，所以将hexo命令目录添加到该用户的环境变量中,hexo用户才能使用hexo命令 12# vim .bash_profilePATH=$PATH:$HOME/.local/bin:$HOME/bin:/opt/node-v10.16.0-linux-x64/lib/node_modules/hexo-cli/bin hexo 和hexo-cli1234English:Hexo-cli is a cli service for create a project.when project was created, all the things doing with hexo module.you can see the hexo module and version in /package.json file in a new hexo project. hexo cli，负责创建 hexo 工程，创建了工程之后，就hexo-cli就全身而退了。hexo-cli 把接力棒交给了 hexo。hexo 模块，负责真正的项目管理工作（生成静态页面、预览等）。 1.2 建站hexo init 初始化必须在一个空目录下进行，否则报错 123456789# 创建建站目录su - hexomkdir blog······hexo init blog # 或者进行目录进行初始化cd bloghexo init 1.3 初始化目录下简介12345678_config.yml .gitignore node_modulespackage.jsonpackage-lock.jsonscaffoldssourcethemes 2 安装 hexo主题本主题使用的是Hexo 的BlueLake 主题这是一个简洁轻量化的响应式Hexo博客主题。 该主题的github位置 1https://github.com/chaooo/hexo-theme-BlueLake 2.1 安装主题软件123[hexo@blog ~]$ su - hexo[hexo@blog ~]$ cd blog[hexo@blog ~]$ git clone https://github.com/chaooo/hexo-theme-BlueLake.git themes/BlueLake 2.2 安装主题渲染器BlueLake是基于jade和stylus写的，所以需要安装hexo-renderer-jade和hexo-renderer-stylus来渲染。 12$ npm install hexo-renderer-jade@0.3.0 --save$ npm install hexo-renderer-stylus --save 123456# 查看已安装渲染器，安装过程中会有警告，不用管，安装上就行[hexo@blog blog]$ npm list |grep hexo-re├─┬ hexo-renderer-ejs@0.3.1├─┬ hexo-renderer-jade@0.3.0├─┬ hexo-renderer-marked@1.0.1├─┬ hexo-renderer-stylus@0.3.3 2.3 启用hexo 主题在Hexo根配置文件（blog/_config.yml）中把主题设置修改为BlueLake。 1theme: BlueLake 如果你想生成压缩后的css，在（hexo/_config.yml）中添加： 12stylus: compress: true 2.4 验证12# 调试模式hexo s --debug 在服务启动的过程， 当命令行输出中提示出：INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop. 此时即可使用浏览器访问 http://localhost:4000，检查站点是否正确运行。如果是公网，使用公网IP 进行访问，注意开4000端口的防火墙。 2.5 进行主题更新12cd themes/BlueLakegit pull 3 主题配置3.1 配置网站头部显示文字打开根_config.yml，找到： 1234title: subtitle: description: author: title和subtitle分别是网站主标题和副标题，会显示在网站头部；description在网站界面不会显示，内容会加入网站源码的meta标签中，主要用于SEO；author就填写网站所有者的名字，会在网站底部的Copyright处有所显示。 3.2 设置语言该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）； 例如选用简体中文，在根_config.yml配置如下： 根_config.yml_config.yml 1language: zh-CN 3.3 设置菜单打开主题_config.yml，找到： 1cd /home/hexo/blog/themes/BlueLake 主题_config.ymlthemes/BlueLake/_config.yml 12345678910111213menu: - page: home directory: . icon: fa-home - page: archive directory: archives/ icon: fa-archive # - page: about # directory: about/ # icon: fa-user - page: rss directory: atom.xml icon: fa-rss 主题默认是展示四个菜单，即主页home，归档archive，关于about，订阅RSS；about需要手动添加，RSS需要安装插件，若您并不需要，可以直接注释掉。每个页面底部的footer中联系博主的三个图标分别是邮箱，微博主页链接地址，GitHUb个人页链接地址，直接使用主题_config.yml中about页面的配置，若不需要about页面，只需要如下配置就好： 主题_config.ymlthemes/BlueLake/_config.yml 12345# About page about: email: ## 个人邮箱 weibo_url: ## 微博主页链接地址 github_url: ## github主页链接地址 3.3.1 添加about页此主题默认page页面是关于我页面的布局，在根目录下打开命令行窗口，生成一个关于我页面： 1234[hexo@blog blog]$ hexo new page aboutINFO Created: ~/blog/source/about/index.md[hexo@blog blog]$ pwd/home/hexo/blog 打开主题_config.yml，补全关于我页面的详细信息： 主题_config.ymlthemes/BlueLake/_config.yml 12345678# About page about: photo_url: ## 头像的链接地址 email: ## 个人邮箱 weibo_url: ## 微博主页链接地址 weibo_name: ## 微博用户名 github_url: ## github主页链接地址 github_name: ## github用户名 当然您也可以自定义重新布局about页面，只需要修改layout/page.jade模板就好。 3.3.2 安装 RSS(订阅) 和 sitemap(网站地图) 插件在根目录下打开命令行窗口： 123$ npm install hexo-generator-feed --save$ npm install hexo-generator-sitemap --save$ npm install hexo-generator-baidu-sitemap --save 添加主题_config.yml配置： 12345678910111213141516主题_config.ymlthemes/BlueLake/_config.ymlPlugins: hexo-generator-feed hexo-generator-sitemap hexo-generator-baidu-sitemapfeed: type: atom path: atom.xml limit: 20sitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml 2.4 添加本地搜索默认本地搜索是用原生JS写的，但还需要HEXO插件创建的JSON数据文件配合。安装插件hexo-generator-json-content来创建JSON数据文件： 123[hexo@blog blog]$ npm install hexo-generator-json-content@2.2.0 --save[hexo@blog blog]$ npm list | grep hexo-generator-json-content├─┬ hexo-generator-json-content@2.2.0 然后在根_config.yml添加配置(根配置文件中默认没有下面的内容)： 根_config.yml_config.yml 123456789101112131415161718jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true 最后在主题_config.yml添加配置： 主题_config.ymlthemes/BlueLake/_config.yml 1local_search: true # 默认是开启的 3.5 修改站点图标站点图标存放在主题的Source目录下，已经默认为您准备了两张图片。您也可以自己设计站点LOGO。您需要准备一张ico格式并命名为** favicon.ico ，请将其放入hexo目录的source文件夹，建议大小：32px X 32px。您需要为苹果设备添加网站徽标，请命名为 apple-touch-icon.png **的图像放入hexo目录的“source”文件夹中，建议大小为：114px X 114px。(有很多网站都可以在线生成ico格式的图片。) 3.6 添加站点关键字请在hexo目录的根_config.yml中添加keywords字段，如： 根_config.yml_config.yml 1234567# Sitetitle: Hexosubtitle: 副标题description: 网站简要描述,如：Charles·Zheng&apos;s blog.keywords: 网站关键字, key, key1, key2, key3author: Charleslanguage: zh-CN 3.7 首页添加文章置顶在根目录下打开命令行窗口安装： 12$ npm uninstall hexo-generator-index --save$ npm install hexo-generator-index-pin-top --save 然后在需要置顶的文章的Front-matter中加上top: true即可。 123456---title: BlueLake博客主题的详细配置tags: [hexo,BlueLake]categories: hexo博客折腾top: true--- 3.8 更换主题背景和添加文章版权信息更换主题背景为深色 主题_config.ymlthemes/BlueLake/_config.yml 12# Theme tonedark: true #true/false 添加文章版权信息 主题_config.ymlthemes/BlueLake/_config.yml 12345# Theme tone#Copyrightcopyright: enable: true #true/false describe: 转载请注明出处(必须保留原文作者署名原文链接) #自定义描述替换默认描述 3.9 其他配置主题_config.yml的其他配置 12show_category_count——是否显示分类下的文章数。widgets_on_small_screens——是否在小屏显示侧边栏，若true,则侧边栏挂件将显示在底部。 主题_config.ymlthemes/BlueLake/_config.yml 12show_category_count: true widgets_on_small_screens: true 4.集成第三方服务4.1 添加评论目前主题集成六种第三方评论，分别是多说评论、Disqus评论、来必力评论、友言评论、网易云跟帖评论、畅言评论，多说马上就要停止服务了，友言好像也没怎么维护,目前我已把自己的博客评论从多说转移到畅言了。 123456789注册并获得代码。若使用多说评论，注册多说后获得short_name。若使用Disqus评论，注册Disqus后获得short_name。若使用来必力评论，注册来必力,获得data-uid。若使用友言评论，注册友言,获得uid。若使用网易云跟帖评论，注册网易云跟帖,获得productKey。若使用畅言评论，注册畅言，获得appid，appkey。配置主题_config.yml：主题_config.ymlthemes/BlueLake/_config.yml 12345678910#Cmmentscomment: duoshuo: ## duoshuo_shortname disqus: ## disqus_shortname livere: ## 来必力(data-uid) uyan: ## 友言(uid) cloudTie: ## 网易云跟帖(productKey) changyan: ## 畅言需在下方配置两个参数，此处不填。 appid: ## 畅言(appid) appkey: ##畅言(appkey) 4.2 百度统计登录百度统计，定位到站点的代码获取页面。复制//hm.baidu.com/hm.js?后面那串统计脚本id(假设为：8006843039519956000)配置主题_config.yml:主题_config.ymlthemes/BlueLake/_config.yml 1baidu_analytics: 8006843039519956000 注意： baidu_analytics不是你的百度id或者百度统计id如若使用谷歌统计，配置方法与百度统计类似。 4.3 卜算子阅读次数统计主题_config.ymlthemes/BlueLake/_config.yml 1busuanzi: true 若设置为true将计算文章的阅读量(Hits)，并显示在文章标题下的小手图标旁。 4.4 微博秀微博秀挂件的代码放在layout/_widget/weibo.jade下，需要您去微博开放平台获取您自己的微博秀代码来替换。 登录微博开放平台，选择微博秀。为了与主题风格统一，作如下配置基础设置：高400px；勾选宽度自适应；颜色选择白色；样式设置：主字色#333；链接色#40759b；鼠标悬停色#f7f8f8；模块设置：去掉标题、边框、粉丝的勾选框，只留微博。复制代码里src=””里引号包裹的内容，替换到layout/_widget/weibo.jadeweibo.jadelayout/_widget/weibo.jade 1234.widget .widget-title i(class=&apos;fa fa-weibo&apos;)= &apos; &apos; + __(&apos;新浪微博&apos;) iframe(width=&quot;100%&quot;,height=&quot;400&quot;,class=&quot;share_self&quot;,frameborder=&quot;0&quot;,scrolling=&quot;no&quot;,src=&quot;http://widget.weibo.com/weiboshow/index.php?language=&amp;width=0&amp;height=400&amp;fansRow=2&amp;ptype=1&amp;speed=0&amp;skin=5&amp;isTitle=0&amp;noborder=0&amp;isWeibo=1&amp;isFans=0&amp;uid=1700139362&amp;verifier=85be6061&amp;colors=d6f3f7,ffffff,333,40759b,f7f8f8&amp;dpc=1&quot;) 这只是为了和主题的风格统一，当然您也可以自由随意发挥。==注意：最主要是是要把src里uid=和verifier=后面的字段替换为您自己代码里的就好。== 备注 123本文章除了第一部分，大部分摘抄 郑超(Charles·Zheng)的内容原文链接: http://chaooo.github.io/2016/12/29/BlueLake博客主题的详细配置.html","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"Windows 10 安装 Anacoda3(64位)","date":"2019-10-15T20:08:00.000Z","path":"2019/10/16/Windows-10-安装-Anacoda3-64位/","text":"简介：用来管理不同版本的Python环境，自带很多常用软件包以及科学计算包。里面所包含的Jupyter Notebook是数据挖掘领域中最热门的工具。(例如Kaggle网站) 安装12官网地址，下载exe文件https://www.anaconda.com/distribution/#download-section 安装完成后，在最后一步，默认是没有添加环境变量的（添加环境变量的勾没有添加），在windows 上添加环境变量 12345D:\\Program Files\\Anaconda3D:\\Program Files\\Anaconda3\\ScriptsD:\\Program Files\\Anaconda3\\Library\\mingw-w64\\binD:\\Program Files\\Anaconda3\\Library\\usr\\binD:\\Program Files\\Anaconda3\\Library\\bin 测试在cmd上执行命令 123456789101112131415161718192021222324252627C:\\Users\\wutai&gt;conda info active environment : None user config file : C:\\Users\\wutai\\.condarc populated config files : C:\\Users\\wutai\\.condarc conda version : 4.7.10 conda-build version : 3.18.8 python version : 3.7.3.final.0 # python 版本 virtual packages : __cuda=9.2 base environment : D:\\Program Files\\Anaconda3 (writable) channel URLs : https://repo.anaconda.com/pkgs/main/win-64 https://repo.anaconda.com/pkgs/main/noarch https://repo.anaconda.com/pkgs/r/win-64 https://repo.anaconda.com/pkgs/r/noarch https://repo.anaconda.com/pkgs/msys2/win-64 https://repo.anaconda.com/pkgs/msys2/noarch package cache : D:\\Program Files\\Anaconda3\\pkgs C:\\Users\\wutai\\.conda\\pkgs C:\\Users\\wutai\\AppData\\Local\\conda\\conda\\pkgs envs directories : D:\\Program Files\\Anaconda3\\envs C:\\Users\\wutai\\.conda\\envs C:\\Users\\wutai\\AppData\\Local\\conda\\conda\\envs platform : win-64 user-agent : conda/4.7.10 requests/2.22.0 CPython/3.7.3 Windows/10 Windows/10.0.18362 administrator : False netrc file : None offline mode : False 安装完成后，Python 和pip 程序都默认安装完毕 123456789101112131415161718C:\\Users\\wutai&gt;pythonPython 3.7.3 (default, Apr 24 2019, 15:29:51) [MSC v.1915 64 bit (AMD64)] :: Anaconda, Inc. on win32Warning:This Python interpreter is in a conda environment, but the environment hasnot been activated. Libraries may fail to load. To activate this environmentplease see https://conda.io/activationType &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt; exit()C:\\Users\\wutai&gt;pip listPackage Version---------------------------------- ---------alabaster 0.7.12anaconda-client 1.7.2anaconda-navigator 1.9.7anaconda-project 0.8.3 Anaconda3 的命令12D:\\Program Files\\Anaconda3\\Scripts 存放可执行的文件，包括 conda 在cmd 上执行命令 123conda # 显示可执行的命令参数conda list # 显示所有的安装的包conda install requests # 安装requests 程序","tags":[{"name":"Anaconda","slug":"Anaconda","permalink":"http://yoursite.com/tags/Anaconda/"}]},{"title":"Hello World","date":"2019-08-29T08:59:21.306Z","path":"2019/08/29/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]